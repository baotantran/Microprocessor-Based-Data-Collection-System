

Microchip Technology PIC18 LITE Macro Assembler V1.44 build -154322312 
                                                                                               Sun Nov 05 19:25:10 2017

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	18F25K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    14                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    15                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    16  0000                     
    17                           ; Version 1.44
    18                           ; Generated 14/09/2017 GMT
    19                           ; 
    20                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC18F25K22 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     _ANSELB	set	3897
    52  0000                     _ANSELA	set	3896
    53  0000                     _ANSELCbits	set	3898
    54  0000                     _TRISB	set	3987
    55  0000                     _TRISA	set	3986
    56  0000                     _INTCON2bits	set	4081
    57  0000                     _SSP1STAT	set	4039
    58  0000                     _SSP1ADD	set	4040
    59  0000                     _SSP1CON2	set	4037
    60  0000                     _TRISCbits	set	3988
    61  0000                     _SSP1CON1	set	4038
    62  0000                     _OSCCONbits	set	4051
    63  0000                     _INTCON3bits	set	4080
    64  0000                     _INTCONbits	set	4082
    65  0000                     _SSP1BUF	set	4041
    66  0000                     _PIR1bits	set	3998
    67  0000                     _SSP1CON2bits	set	4037
    68  0000                     _SSPCON2	set	4037
    69  0000                     _SSPSTAT	set	4039
    70                           
    71                           ; #config settings
    72  0000                     
    73                           	psect	cinit
    74  0001C6                     __pcinit:
    75                           	opt stack 0
    76  0001C6                     start_initialization:
    77                           	opt stack 0
    78  0001C6                     __initialization:
    79                           	opt stack 0
    80                           
    81                           ; Clear objects allocated to COMRAM (1 bytes)
    82  0001C6  6A1A               	clrf	__pbssCOMRAM& (0+255),c
    83  0001C8                     end_of_initialization:
    84                           	opt stack 0
    85  0001C8                     __end_of__initialization:
    86                           	opt stack 0
    87  0001C8  901B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    88  0001CA  921B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    89  0001CC  0100               	movlb	0
    90  0001CE  EFA1  F000         	goto	_main	;jump to C main() function
    91                           
    92                           	psect	bssCOMRAM
    93  00001A                     __pbssCOMRAM:
    94                           	opt stack 0
    95  00001A                     _temp:
    96                           	opt stack 0
    97  00001A                     	ds	1
    98                           
    99                           	psect	cstackCOMRAM
   100  000001                     __pcstackCOMRAM:
   101                           	opt stack 0
   102  000001                     ??_master_wait:
   103  000001                     
   104                           ; 1 bytes @ 0x0
   105  000001                     	ds	1
   106  000002                     ?_master_read:
   107                           	opt stack 0
   108  000002                     master_write@addr:
   109                           	opt stack 0
   110  000002                     master_read@addr:
   111                           	opt stack 0
   112                           
   113                           ; 2 bytes @ 0x1
   114  000002                     	ds	2
   115  000004                     master_write@data:
   116                           	opt stack 0
   117  000004                     master_read@temp:
   118                           	opt stack 0
   119                           
   120                           ; 2 bytes @ 0x3
   121  000004                     	ds	2
   122  000006                     ??_isr:
   123                           
   124                           ; 1 bytes @ 0x5
   125  000006                     	ds	18
   126  000018                     isr@i:
   127                           	opt stack 0
   128                           
   129                           ; 2 bytes @ 0x17
   130  000018                     	ds	2
   131  00001A                     
   132                           ; 1 bytes @ 0x19
   133 ;;
   134 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   135 ;;
   136 ;; *************** function _main *****************
   137 ;; Defined at:
   138 ;;		line 79 in file "master.c"
   139 ;; Parameters:    Size  Location     Type
   140 ;;		None
   141 ;; Auto vars:     Size  Location     Type
   142 ;;		None
   143 ;; Return value:  Size  Location     Type
   144 ;;                  1    wreg      void 
   145 ;; Registers used:
   146 ;;		wreg, status,2
   147 ;; Tracked objects:
   148 ;;		On entry : 0/0
   149 ;;		On exit  : 0/0
   150 ;;		Unchanged: 0/0
   151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   152 ;;      Params:         0       0       0       0       0       0       0
   153 ;;      Locals:         0       0       0       0       0       0       0
   154 ;;      Temps:          0       0       0       0       0       0       0
   155 ;;      Totals:         0       0       0       0       0       0       0
   156 ;;Total ram usage:        0 bytes
   157 ;; Hardware stack levels required when called:    3
   158 ;; This function calls:
   159 ;;		Nothing
   160 ;; This function is called by:
   161 ;;		Startup code after reset
   162 ;; This function uses a non-reentrant model
   163 ;;
   164                           
   165                           	psect	text0
   166  000142                     __ptext0:
   167                           	opt stack 0
   168  000142                     _main:
   169                           	opt stack 28
   170                           
   171                           ;master.c: 80: OSCCONbits.IRCF=0b110;
   172                           
   173                           ;incstack = 0
   174  000142  50D3               	movf	4051,w,c	;volatile
   175  000144  0B8F               	andlw	-113
   176  000146  0960               	iorlw	96
   177  000148  6ED3               	movwf	4051,c	;volatile
   178                           
   179                           ;master.c: 82: SSP1CON1=0b00101000;
   180  00014A  0E28               	movlw	40
   181  00014C  6EC6               	movwf	4038,c	;volatile
   182                           
   183                           ;master.c: 83: ANSELCbits.ANSC3=0;
   184  00014E  010F               	movlb	15	; () banked
   185  000150  973A               	bcf	58,3,b	;volatile
   186                           
   187                           ; BSR set to: 15
   188                           ;master.c: 84: ANSELCbits.ANSC4=0;
   189  000152  993A               	bcf	58,4,b	;volatile
   190                           
   191                           ; BSR set to: 15
   192                           ;master.c: 85: TRISCbits.RC3=1;
   193  000154  8694               	bsf	3988,3,c	;volatile
   194                           
   195                           ; BSR set to: 15
   196                           ;master.c: 86: TRISCbits.RC4=1;
   197  000156  8894               	bsf	3988,4,c	;volatile
   198                           
   199                           ; BSR set to: 15
   200                           ;master.c: 87: SSP1CON2bits.RCEN=0;
   201  000158  96C5               	bcf	4037,3,c	;volatile
   202                           
   203                           ;master.c: 88: SSP1CON2=0;
   204  00015A  0E00               	movlw	0
   205  00015C  6EC5               	movwf	4037,c	;volatile
   206                           
   207                           ;master.c: 89: SSP1ADD=(8000000/(4*100000))-1;
   208  00015E  0E13               	movlw	19
   209  000160  6EC8               	movwf	4040,c	;volatile
   210                           
   211                           ;master.c: 90: SSP1STAT=0x80;
   212  000162  0E80               	movlw	128
   213  000164  6EC7               	movwf	4039,c	;volatile
   214                           
   215                           ; BSR set to: 15
   216                           ;master.c: 92: INTCONbits.GIE=1;
   217  000166  8EF2               	bsf	intcon,7,c	;volatile
   218                           
   219                           ; BSR set to: 15
   220                           ;master.c: 93: INTCONbits.INT0IE=1;
   221  000168  88F2               	bsf	intcon,4,c	;volatile
   222                           
   223                           ; BSR set to: 15
   224                           ;master.c: 94: INTCON3bits.INT1IE=1;
   225  00016A  86F0               	bsf	intcon3,3,c	;volatile
   226                           
   227                           ; BSR set to: 15
   228                           ;master.c: 95: INTCONbits.INT0IF=0;
   229  00016C  92F2               	bcf	intcon,1,c	;volatile
   230                           
   231                           ; BSR set to: 15
   232                           ;master.c: 96: INTCON3bits.INT1IF=0;
   233  00016E  90F0               	bcf	intcon3,0,c	;volatile
   234                           
   235                           ; BSR set to: 15
   236                           ;master.c: 97: INTCON2bits.INTEDG0=1;
   237  000170  8CF1               	bsf	intcon2,6,c	;volatile
   238                           
   239                           ; BSR set to: 15
   240                           ;master.c: 98: INTCON2bits.INTEDG1=1;
   241  000172  8AF1               	bsf	intcon2,5,c	;volatile
   242                           
   243                           ;master.c: 100: TRISA=0x00;
   244  000174  0E00               	movlw	0
   245  000176  6E92               	movwf	3986,c	;volatile
   246                           
   247                           ;master.c: 101: ANSELA=0x00;
   248  000178  0E00               	movlw	0
   249  00017A  6F38               	movwf	56,b	;volatile
   250                           
   251                           ; BSR set to: 15
   252                           ;master.c: 102: TRISB=0xff;
   253  00017C  6893               	setf	3987,c	;volatile
   254                           
   255                           ;master.c: 103: ANSELB=0x00;
   256  00017E  0E00               	movlw	0
   257  000180  6F39               	movwf	57,b	;volatile
   258  000182                     l87:
   259  000182  D7FF               	goto	l87
   260  000184                     __end_of_main:
   261                           	opt stack 0
   262                           intcon	equ	0xFF2
   263                           intcon2	equ	0xFF1
   264                           intcon3	equ	0xFF0
   265                           
   266 ;; *************** function _isr *****************
   267 ;; Defined at:
   268 ;;		line 66 in file "master.c"
   269 ;; Parameters:    Size  Location     Type
   270 ;;		None
   271 ;; Auto vars:     Size  Location     Type
   272 ;;  i               2   23[COMRAM] int 
   273 ;; Return value:  Size  Location     Type
   274 ;;                  1    wreg      void 
   275 ;; Registers used:
   276 ;;		wreg, status,2, status,0, cstack
   277 ;; Tracked objects:
   278 ;;		On entry : 0/0
   279 ;;		On exit  : 0/0
   280 ;;		Unchanged: 0/0
   281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   282 ;;      Params:         0       0       0       0       0       0       0
   283 ;;      Locals:         2       0       0       0       0       0       0
   284 ;;      Temps:         18       0       0       0       0       0       0
   285 ;;      Totals:        20       0       0       0       0       0       0
   286 ;;Total ram usage:       20 bytes
   287 ;; Hardware stack levels used:    1
   288 ;; Hardware stack levels required when called:    2
   289 ;; This function calls:
   290 ;;		_master_read
   291 ;;		_master_write
   292 ;; This function is called by:
   293 ;;		Interrupt level 2
   294 ;; This function uses a non-reentrant model
   295 ;;
   296                           
   297                           	psect	intcode
   298  000008                     __pintcode:
   299                           	opt stack 0
   300  000008                     _isr:
   301                           	opt stack 28
   302                           
   303                           ;incstack = 0
   304  000008  821B               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
   305  00000A  CFFA F006          	movff	pclath,??_isr
   306  00000E  CFFB F007          	movff	pclatu,??_isr+1
   307  000012  CFE9 F008          	movff	fsr0l,??_isr+2
   308  000016  CFEA F009          	movff	fsr0h,??_isr+3
   309  00001A  CFE1 F00A          	movff	fsr1l,??_isr+4
   310  00001E  CFE2 F00B          	movff	fsr1h,??_isr+5
   311  000022  CFD9 F00C          	movff	fsr2l,??_isr+6
   312  000026  CFDA F00D          	movff	fsr2h,??_isr+7
   313  00002A  CFF3 F00E          	movff	prodl,??_isr+8
   314  00002E  CFF4 F00F          	movff	prodh,??_isr+9
   315  000032  CFF6 F010          	movff	tblptrl,??_isr+10
   316  000036  CFF7 F011          	movff	tblptrh,??_isr+11
   317  00003A  CFF8 F012          	movff	tblptru,??_isr+12
   318  00003E  CFF5 F013          	movff	tablat,??_isr+13
   319  000042  C01B  F014         	movff	btemp,??_isr+14
   320  000046  C01C  F015         	movff	btemp+1,??_isr+15
   321  00004A  C01D  F016         	movff	btemp+2,??_isr+16
   322  00004E  C01E  F017         	movff	btemp+3,??_isr+17
   323                           
   324                           ;master.c: 67: if (INTCONbits.INT0IF){
   325  000052  A2F2               	btfss	intcon,1,c	;volatile
   326  000054  D01B               	goto	i2l74
   327                           
   328                           ;master.c: 68: for(int i=0;i<=1000;i++){
   329  000056  0E00               	movlw	0
   330  000058  6E19               	movwf	isr@i+1,c
   331  00005A  0E00               	movlw	0
   332  00005C  6E18               	movwf	isr@i,c
   333  00005E  D00C               	goto	i2l852
   334  000060                     
   335                           ;master.c: 69: master_write(0x80, 2);
   336  000060  0E00               	movlw	0
   337  000062  6E03               	movwf	master_write@addr+1,c
   338  000064  0E80               	movlw	128
   339  000066  6E02               	movwf	master_write@addr,c
   340  000068  0E00               	movlw	0
   341  00006A  6E05               	movwf	master_write@data+1,c
   342  00006C  0E02               	movlw	2
   343  00006E  6E04               	movwf	master_write@data,c
   344  000070  ECC2  F000         	call	_master_write	;wreg free
   345  000074  4A18               	infsnz	isr@i,f,c
   346  000076  2A19               	incf	isr@i+1,f,c
   347  000078                     i2l852:
   348  000078  BE19               	btfsc	isr@i+1,7,c
   349  00007A  D7F2               	goto	i2l75
   350  00007C  0EE9               	movlw	233
   351  00007E  5C18               	subwf	isr@i,w,c
   352  000080  0E03               	movlw	3
   353  000082  5819               	subwfb	isr@i+1,w,c
   354  000084  A0D8               	btfss	status,0,c
   355  000086  D7EC               	goto	i2l75
   356                           
   357                           ;master.c: 70: }
   358                           ;master.c: 71: INTCONbits.INT0IF=0;
   359  000088  92F2               	bcf	intcon,1,c	;volatile
   360                           
   361                           ;master.c: 72: } else if (INTCON3bits.INT1IF){
   362  00008A  D00B               	goto	i2l78
   363  00008C                     i2l74:
   364  00008C  A0F0               	btfss	intcon3,0,c	;volatile
   365  00008E  D009               	goto	i2l78
   366                           
   367                           ;master.c: 73: temp=master_read(0x81);
   368  000090  0E00               	movlw	0
   369  000092  6E03               	movwf	master_read@addr+1,c
   370  000094  0E81               	movlw	129
   371  000096  6E02               	movwf	master_read@addr,c
   372  000098  EC7C  F000         	call	_master_read	;wreg free
   373  00009C  5002               	movf	?_master_read,w,c
   374  00009E  6E1A               	movwf	_temp,c
   375                           
   376                           ;master.c: 74: INTCON3bits.INT1IF=0;
   377  0000A0  90F0               	bcf	intcon3,0,c	;volatile
   378  0000A2                     i2l78:
   379                           
   380                           ;master.c: 75: }
   381                           ;master.c: 76: SSP1CON2bits.PEN=1;
   382  0000A2  84C5               	bsf	4037,2,c	;volatile
   383  0000A4  B4C5               	btfsc	4037,2,c	;volatile
   384  0000A6  D7FE               	goto	i2l80
   385  0000A8  C017  F01E         	movff	??_isr+17,btemp+3
   386  0000AC  C016  F01D         	movff	??_isr+16,btemp+2
   387  0000B0  C015  F01C         	movff	??_isr+15,btemp+1
   388  0000B4  C014  F01B         	movff	??_isr+14,btemp
   389  0000B8  C013  FFF5         	movff	??_isr+13,tablat
   390  0000BC  C012  FFF8         	movff	??_isr+12,tblptru
   391  0000C0  C011  FFF7         	movff	??_isr+11,tblptrh
   392  0000C4  C010  FFF6         	movff	??_isr+10,tblptrl
   393  0000C8  C00F  FFF4         	movff	??_isr+9,prodh
   394  0000CC  C00E  FFF3         	movff	??_isr+8,prodl
   395  0000D0  C00D  FFDA         	movff	??_isr+7,fsr2h
   396  0000D4  C00C  FFD9         	movff	??_isr+6,fsr2l
   397  0000D8  C00B  FFE2         	movff	??_isr+5,fsr1h
   398  0000DC  C00A  FFE1         	movff	??_isr+4,fsr1l
   399  0000E0  C009  FFEA         	movff	??_isr+3,fsr0h
   400  0000E4  C008  FFE9         	movff	??_isr+2,fsr0l
   401  0000E8  C007  FFFB         	movff	??_isr+1,pclatu
   402  0000EC  C006  FFFA         	movff	??_isr,pclath
   403  0000F0  921B               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
   404  0000F2  0011               	retfie		f
   405  0000F4                     __end_of_isr:
   406                           	opt stack 0
   407                           pclatu	equ	0xFFB
   408                           pclath	equ	0xFFA
   409                           tblptru	equ	0xFF8
   410                           tblptrh	equ	0xFF7
   411                           tblptrl	equ	0xFF6
   412                           tablat	equ	0xFF5
   413                           prodh	equ	0xFF4
   414                           prodl	equ	0xFF3
   415                           intcon	equ	0xFF2
   416                           intcon2	equ	0xFF1
   417                           intcon3	equ	0xFF0
   418                           fsr0h	equ	0xFEA
   419                           fsr0l	equ	0xFE9
   420                           fsr1h	equ	0xFE2
   421                           fsr1l	equ	0xFE1
   422                           fsr2h	equ	0xFDA
   423                           fsr2l	equ	0xFD9
   424                           status	equ	0xFD8
   425                           
   426 ;; *************** function _master_write *****************
   427 ;; Defined at:
   428 ;;		line 22 in file "master.c"
   429 ;; Parameters:    Size  Location     Type
   430 ;;  addr            2    1[COMRAM] unsigned short 
   431 ;;  data            2    3[COMRAM] unsigned short 
   432 ;; Auto vars:     Size  Location     Type
   433 ;;		None
   434 ;; Return value:  Size  Location     Type
   435 ;;                  1    wreg      void 
   436 ;; Registers used:
   437 ;;		wreg, status,2, status,0, cstack
   438 ;; Tracked objects:
   439 ;;		On entry : 0/0
   440 ;;		On exit  : 0/0
   441 ;;		Unchanged: 0/0
   442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   443 ;;      Params:         4       0       0       0       0       0       0
   444 ;;      Locals:         0       0       0       0       0       0       0
   445 ;;      Temps:          0       0       0       0       0       0       0
   446 ;;      Totals:         4       0       0       0       0       0       0
   447 ;;Total ram usage:        4 bytes
   448 ;; Hardware stack levels used:    1
   449 ;; Hardware stack levels required when called:    1
   450 ;; This function calls:
   451 ;;		_master_wait
   452 ;; This function is called by:
   453 ;;		_isr
   454 ;; This function uses a non-reentrant model
   455 ;;
   456                           
   457                           	psect	text2
   458  000184                     __ptext2:
   459                           	opt stack 0
   460  000184                     _master_write:
   461                           	opt stack 28
   462                           
   463                           ;master.c: 23: SSP1CON2bits.SEN=1;
   464                           
   465                           ;incstack = 0
   466  000184  80C5               	bsf	4037,0,c	;volatile
   467                           
   468                           ;master.c: 24: master_wait();
   469  000186  ECDA  F000         	call	_master_wait	;wreg free
   470                           
   471                           ;master.c: 25: PIR1bits.SSP1IF=0;
   472  00018A  969E               	bcf	3998,3,c	;volatile
   473                           
   474                           ;master.c: 26: SSP1BUF=addr;
   475  00018C  C002  FFC9         	movff	master_write@addr,4041	;volatile
   476  000190  A69E               	btfss	3998,3,c	;volatile
   477  000192  D7FE               	goto	i2l50
   478                           
   479                           ;master.c: 28: if(SSP1CON2bits.ACKSTAT==1){
   480  000194  ACC5               	btfss	4037,6,c	;volatile
   481  000196  D004               	goto	i2l52
   482                           
   483                           ;master.c: 29: SSP1CON2bits.PEN=1;
   484  000198  84C5               	bsf	4037,2,c	;volatile
   485  00019A  A4C5               	btfss	4037,2,c	;volatile
   486  00019C  0012               	return	
   487  00019E  D7FD               	goto	i2l54
   488  0001A0                     i2l52:
   489                           
   490                           ;master.c: 32: }
   491                           ;master.c: 33: PIR1bits.SSP1IF=0;
   492  0001A0  969E               	bcf	3998,3,c	;volatile
   493                           
   494                           ;master.c: 34: SSP1BUF=data;
   495  0001A2  C004  FFC9         	movff	master_write@data,4041	;volatile
   496  0001A6  A69E               	btfss	3998,3,c	;volatile
   497  0001A8  D7FE               	goto	i2l58
   498                           
   499                           ;master.c: 36: PIR1bits.SSP1IF=0;
   500  0001AA  969E               	bcf	3998,3,c	;volatile
   501                           
   502                           ;master.c: 38: SSP1CON2bits.PEN=1;
   503  0001AC  84C5               	bsf	4037,2,c	;volatile
   504                           
   505                           ;master.c: 39: master_wait();
   506  0001AE  ECDA  F000         	call	_master_wait	;wreg free
   507  0001B2  0012               	return		;funcret
   508  0001B4                     __end_of_master_write:
   509                           	opt stack 0
   510                           pclatu	equ	0xFFB
   511                           pclath	equ	0xFFA
   512                           tblptru	equ	0xFF8
   513                           tblptrh	equ	0xFF7
   514                           tblptrl	equ	0xFF6
   515                           tablat	equ	0xFF5
   516                           prodh	equ	0xFF4
   517                           prodl	equ	0xFF3
   518                           intcon	equ	0xFF2
   519                           intcon2	equ	0xFF1
   520                           intcon3	equ	0xFF0
   521                           fsr0h	equ	0xFEA
   522                           fsr0l	equ	0xFE9
   523                           fsr1h	equ	0xFE2
   524                           fsr1l	equ	0xFE1
   525                           fsr2h	equ	0xFDA
   526                           fsr2l	equ	0xFD9
   527                           status	equ	0xFD8
   528                           
   529 ;; *************** function _master_read *****************
   530 ;; Defined at:
   531 ;;		line 41 in file "master.c"
   532 ;; Parameters:    Size  Location     Type
   533 ;;  addr            2    1[COMRAM] unsigned short 
   534 ;; Auto vars:     Size  Location     Type
   535 ;;  temp            2    3[COMRAM] unsigned short 
   536 ;; Return value:  Size  Location     Type
   537 ;;                  2    1[COMRAM] unsigned short 
   538 ;; Registers used:
   539 ;;		wreg, status,2, status,0, cstack
   540 ;; Tracked objects:
   541 ;;		On entry : 0/0
   542 ;;		On exit  : 0/0
   543 ;;		Unchanged: 0/0
   544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   545 ;;      Params:         2       0       0       0       0       0       0
   546 ;;      Locals:         2       0       0       0       0       0       0
   547 ;;      Temps:          0       0       0       0       0       0       0
   548 ;;      Totals:         4       0       0       0       0       0       0
   549 ;;Total ram usage:        4 bytes
   550 ;; Hardware stack levels used:    1
   551 ;; Hardware stack levels required when called:    1
   552 ;; This function calls:
   553 ;;		_master_wait
   554 ;; This function is called by:
   555 ;;		_isr
   556 ;; This function uses a non-reentrant model
   557 ;;
   558                           
   559                           	psect	text3
   560  0000F8                     __ptext3:
   561                           	opt stack 0
   562  0000F8                     _master_read:
   563                           	opt stack 28
   564                           
   565                           ;master.c: 42: unsigned short temp;
   566                           ;master.c: 43: SSP1CON2bits.SEN=1;
   567                           
   568                           ;incstack = 0
   569  0000F8  80C5               	bsf	4037,0,c	;volatile
   570                           
   571                           ;master.c: 44: master_wait();
   572  0000FA  ECDA  F000         	call	_master_wait	;wreg free
   573                           
   574                           ;master.c: 45: PIR1bits.SSP1IF=0;
   575  0000FE  969E               	bcf	3998,3,c	;volatile
   576                           
   577                           ;master.c: 46: temp=SSP1BUF;
   578  000100  CFC9 F004          	movff	4041,master_read@temp	;volatile
   579  000104  6A05               	clrf	master_read@temp+1,c
   580                           
   581                           ;master.c: 47: SSP1BUF=addr;
   582  000106  C002  FFC9         	movff	master_read@addr,4041	;volatile
   583  00010A  A69E               	btfss	3998,3,c	;volatile
   584  00010C  D7FE               	goto	i2l63
   585                           
   586                           ;master.c: 49: if(SSP1CON2bits.ACKSTAT){
   587  00010E  ACC5               	btfss	4037,6,c	;volatile
   588  000110  D008               	goto	i2l65
   589                           
   590                           ;master.c: 50: SSP1CON2bits.PEN=1;
   591  000112  84C5               	bsf	4037,2,c	;volatile
   592                           
   593                           ;master.c: 51: master_wait();
   594  000114  ECDA  F000         	call	_master_wait	;wreg free
   595                           
   596                           ;master.c: 52: return 0;
   597  000118  0E00               	movlw	0
   598  00011A  6E03               	movwf	?_master_read+1,c
   599  00011C  0E00               	movlw	0
   600  00011E  6E02               	movwf	?_master_read,c
   601  000120  0012               	return	
   602  000122                     i2l65:
   603                           
   604                           ;master.c: 53: }
   605                           ;master.c: 54: PIR1bits.SSP1IF=0;
   606  000122  969E               	bcf	3998,3,c	;volatile
   607                           
   608                           ;master.c: 55: SSP1CON2bits.RCEN=1;
   609  000124  86C5               	bsf	4037,3,c	;volatile
   610                           
   611                           ;master.c: 56: master_wait();
   612  000126  ECDA  F000         	call	_master_wait	;wreg free
   613                           
   614                           ;master.c: 57: temp=SSP1BUF;
   615  00012A  CFC9 F004          	movff	4041,master_read@temp	;volatile
   616  00012E  6A05               	clrf	master_read@temp+1,c
   617                           
   618                           ;master.c: 58: PIR1bits.SSP1IF=0;
   619  000130  969E               	bcf	3998,3,c	;volatile
   620                           
   621                           ;master.c: 61: SSP1CON2bits.PEN=1;
   622  000132  84C5               	bsf	4037,2,c	;volatile
   623  000134  B4C5               	btfsc	4037,2,c	;volatile
   624  000136  D7FE               	goto	i2l68
   625                           
   626                           ;master.c: 63: return temp;
   627  000138  C004  F002         	movff	master_read@temp,?_master_read
   628  00013C  C005  F003         	movff	master_read@temp+1,?_master_read+1
   629  000140  0012               	return		;funcret
   630  000142                     __end_of_master_read:
   631                           	opt stack 0
   632                           pclatu	equ	0xFFB
   633                           pclath	equ	0xFFA
   634                           tblptru	equ	0xFF8
   635                           tblptrh	equ	0xFF7
   636                           tblptrl	equ	0xFF6
   637                           tablat	equ	0xFF5
   638                           prodh	equ	0xFF4
   639                           prodl	equ	0xFF3
   640                           intcon	equ	0xFF2
   641                           intcon2	equ	0xFF1
   642                           intcon3	equ	0xFF0
   643                           fsr0h	equ	0xFEA
   644                           fsr0l	equ	0xFE9
   645                           fsr1h	equ	0xFE2
   646                           fsr1l	equ	0xFE1
   647                           fsr2h	equ	0xFDA
   648                           fsr2l	equ	0xFD9
   649                           status	equ	0xFD8
   650                           
   651 ;; *************** function _master_wait *****************
   652 ;; Defined at:
   653 ;;		line 19 in file "master.c"
   654 ;; Parameters:    Size  Location     Type
   655 ;;		None
   656 ;; Auto vars:     Size  Location     Type
   657 ;;		None
   658 ;; Return value:  Size  Location     Type
   659 ;;                  1    wreg      void 
   660 ;; Registers used:
   661 ;;		wreg, status,2, status,0
   662 ;; Tracked objects:
   663 ;;		On entry : 0/0
   664 ;;		On exit  : 0/0
   665 ;;		Unchanged: 0/0
   666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   667 ;;      Params:         0       0       0       0       0       0       0
   668 ;;      Locals:         0       0       0       0       0       0       0
   669 ;;      Temps:          1       0       0       0       0       0       0
   670 ;;      Totals:         1       0       0       0       0       0       0
   671 ;;Total ram usage:        1 bytes
   672 ;; Hardware stack levels used:    1
   673 ;; This function calls:
   674 ;;		Nothing
   675 ;; This function is called by:
   676 ;;		_master_write
   677 ;;		_master_read
   678 ;; This function uses a non-reentrant model
   679 ;;
   680                           
   681                           	psect	text4
   682  0001B4                     __ptext4:
   683                           	opt stack 0
   684  0001B4                     _master_wait:
   685                           	opt stack 28
   686                           
   687                           ;master.c: 20: while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
   688                           
   689                           ;incstack = 0
   690  0001B4  B4C7               	btfsc	4039,2,c	;volatile
   691  0001B6  D7FE               	goto	_master_wait
   692  0001B8  CFC5 F001          	movff	4037,??_master_wait	;volatile
   693  0001BC  0E1F               	movlw	31
   694  0001BE  1601               	andwf	??_master_wait,f,c
   695  0001C0  B4D8               	btfsc	status,2,c
   696  0001C2  0012               	return	
   697  0001C4  D7F7               	goto	_master_wait
   698  0001C6                     __end_of_master_wait:
   699                           	opt stack 0
   700  0000                     pclatu	equ	0xFFB
   701                           pclath	equ	0xFFA
   702                           tblptru	equ	0xFF8
   703                           tblptrh	equ	0xFF7
   704                           tblptrl	equ	0xFF6
   705                           tablat	equ	0xFF5
   706                           prodh	equ	0xFF4
   707                           prodl	equ	0xFF3
   708                           intcon	equ	0xFF2
   709                           intcon2	equ	0xFF1
   710                           intcon3	equ	0xFF0
   711                           fsr0h	equ	0xFEA
   712                           fsr0l	equ	0xFE9
   713                           fsr1h	equ	0xFE2
   714                           fsr1l	equ	0xFE1
   715                           fsr2h	equ	0xFDA
   716                           fsr2l	equ	0xFD9
   717                           status	equ	0xFD8
   718                           pclatu	equ	0xFFB
   719                           pclath	equ	0xFFA
   720                           tblptru	equ	0xFF8
   721                           tblptrh	equ	0xFF7
   722                           tblptrl	equ	0xFF6
   723                           tablat	equ	0xFF5
   724                           prodh	equ	0xFF4
   725                           prodl	equ	0xFF3
   726                           intcon	equ	0xFF2
   727                           intcon2	equ	0xFF1
   728                           intcon3	equ	0xFF0
   729                           fsr0h	equ	0xFEA
   730                           fsr0l	equ	0xFE9
   731                           fsr1h	equ	0xFE2
   732                           fsr1l	equ	0xFE1
   733                           fsr2h	equ	0xFDA
   734                           fsr2l	equ	0xFD9
   735                           status	equ	0xFD8
   736                           
   737                           	psect	rparam
   738  0000                     pclatu	equ	0xFFB
   739                           pclath	equ	0xFFA
   740                           tblptru	equ	0xFF8
   741                           tblptrh	equ	0xFF7
   742                           tblptrl	equ	0xFF6
   743                           tablat	equ	0xFF5
   744                           prodh	equ	0xFF4
   745                           prodl	equ	0xFF3
   746                           intcon	equ	0xFF2
   747                           intcon2	equ	0xFF1
   748                           intcon3	equ	0xFF0
   749                           fsr0h	equ	0xFEA
   750                           fsr0l	equ	0xFE9
   751                           fsr1h	equ	0xFE2
   752                           fsr1l	equ	0xFE1
   753                           fsr2h	equ	0xFDA
   754                           fsr2l	equ	0xFD9
   755                           status	equ	0xFD8
   756                           
   757                           	psect	temp
   758  00001B                     btemp:
   759                           	opt stack 0
   760  00001B                     	ds	1
   761  0000                     int$flags	set	btemp
   762  0000                     wtemp6	set	btemp+1
   763                           pclatu	equ	0xFFB
   764                           pclath	equ	0xFFA
   765                           tblptru	equ	0xFF8
   766                           tblptrh	equ	0xFF7
   767                           tblptrl	equ	0xFF6
   768                           tablat	equ	0xFF5
   769                           prodh	equ	0xFF4
   770                           prodl	equ	0xFF3
   771                           intcon	equ	0xFF2
   772                           intcon2	equ	0xFF1
   773                           intcon3	equ	0xFF0
   774                           fsr0h	equ	0xFEA
   775                           fsr0l	equ	0xFE9
   776                           fsr1h	equ	0xFE2
   777                           fsr1l	equ	0xFE1
   778                           fsr2h	equ	0xFDA
   779                           fsr2l	equ	0xFD9
   780                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     25      26
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _isr in COMRAM

    _isr->_master_read
    _isr->_master_write
    _master_write->_master_wait
    _master_read->_master_wait

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _isr                                                 20    20      0     364
                                              5 COMRAM    20    20      0
                        _master_read
                       _master_write
 ---------------------------------------------------------------------------------
 (2) _master_write                                         4     0      4     196
                                              1 COMRAM     4     0      4
                        _master_wait
 ---------------------------------------------------------------------------------
 (2) _master_read                                          4     2      2     122
                                              1 COMRAM     4     2      2
                        _master_wait
 ---------------------------------------------------------------------------------
 (3) _master_wait                                          1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _isr (ROOT)
   _master_read
     _master_wait
   _master_write
     _master_wait

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0       0       4        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     19      1A       1       27.7%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      1A       9        0.0%
DATA                 0      0      1A      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Sun Nov 05 19:25:10 2017

                     l87 0182             __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000  
           __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000              __CFG_LVP$ON 000000  
           __CFG_CPB$OFF 000000             __CFG_CPD$OFF 000000                      _isr 0008  
                   ?_isr 0001                     i2l50 0190                     i2l52 01A0  
                   i2l54 019A                     i2l63 010A                     i2l80 00A4  
                   i2l65 0122                     i2l58 01A6                     i2l74 008C  
                   i2l75 0060                     i2l68 0134                     i2l78 00A2  
                   _main 0142                     _temp 001A                     fsr0h 000FEA  
                   fsr1h 000FE2                     fsr2h 000FDA                     fsr0l 000FE9  
                   fsr1l 000FE1                     fsr2l 000FD9                     btemp 001B  
          __CFG_BORV$190 000000                     isr@i 0018                     prodh 000FF4  
                   prodl 000FF3                     start 00F4            __CFG_IESO$OFF 000000  
           ___param_bank 000000                    ??_isr 0006                    ?_main 0001  
                  i2l852 0078                    _TRISA 000F92                    _TRISB 000F93  
          __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000  
          __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000  
         __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000  
           ?_master_read 0002            __CFG_WRTB$OFF 000000             ?_master_wait 0001  
          __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000  
     __CFG_MCLRE$EXTMCLR 000000           __CFG_BOREN$OFF 000000                    pclath 000FFA  
                  tablat 000FF5                    status 000FD8                    wtemp6 001C  
         __CFG_HFOFST$ON 000000           __CFG_PBADEN$ON 000000          __initialization 01C6  
           __end_of_main 0184                   ??_main 001A            __activetblptr 000000  
                 _ANSELA 000F38                   _ANSELB 000F39           __CFG_WDTEN$OFF 000000  
         __CFG_XINST$OFF 000000            ?_master_write 0002           __CFG_STVREN$ON 000000  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
             __accesstop 0060  __end_of__initialization 01C8            ___rparam_used 000001  
         ??_master_write 0006           __pcstackCOMRAM 0001     __size_of_master_read 004A  
   __size_of_master_wait 0012          __CFG_PLLCFG$OFF 000000       __CFG_CCP2MX$PORTC1 000000  
     __CFG_CCP3MX$PORTB5 000000                  _SSP1ADD 000FC8                  _SSP1BUF 000FC9  
                _SSPCON2 000FC5                  _SSPSTAT 000FC7          __CFG_PWRTEN$OFF 000000  
                __Hparam 0000                  __Lparam 0000                  __pcinit 01C6  
                __ramtop 0600                  __ptext0 0142                  __ptext2 0184  
                __ptext3 00F8                  __ptext4 01B4             __size_of_isr 00EC  
   __end_of_master_write 01B4     end_of_initialization 01C8                _TRISCbits 000F94  
    start_initialization 01C6              __end_of_isr 00F4    __size_of_master_write 0030  
            __pbssCOMRAM 001A            ??_master_read 0004            ??_master_wait 0001  
              __pintcode 0008             _master_write 0184         __CFG_PRICLKEN$ON 000000  
    __end_of_master_read 0142      __end_of_master_wait 01C6         master_write@addr 0002  
       master_write@data 0004                 _PIR1bits 000F9E         __CFG_WDTPS$32768 000000  
               _SSP1CON1 000FC6                 _SSP1CON2 000FC5                 _SSP1STAT 000FC7  
            _INTCON2bits 000FF1              _INTCON3bits 000FF0          master_read@addr 0002  
        master_read@temp 0004                 __Hrparam 0000                 __Lrparam 0000  
      __CFG_P2BMX$PORTB5 000000               _ANSELCbits 000F3A              _master_read 00F8  
            _master_wait 01B4             _SSP1CON2bits 000FC5            __size_of_main 0042  
               int$flags 001B               _INTCONbits 000FF2                 intlevel2 0000  
             _OSCCONbits 000FD3        __CFG_T3CMX$PORTC0 000000        __CFG_FOSC$INTIO67 000000  
